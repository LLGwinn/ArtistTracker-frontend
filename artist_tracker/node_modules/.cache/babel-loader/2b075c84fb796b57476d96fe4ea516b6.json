{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\nimport userContext from './userContext';\n/** Renders a list of events in table format for an artist.\n * \n *  If user is logged in, shows button to save an event to their account.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventList(_ref) {\n  _s();\n\n  let {\n    artistId,\n    cityInfo,\n    radius\n  } = _ref;\n  const [events, setEvents] = useState([]);\n  const [artist, setArtist] = useState({});\n  const {\n    currUser\n  } = useContext(userContext); // Get artist details when page loads\n\n  useEffect(() => {\n    async function setArtistData() {\n      await getArtistDetails();\n    }\n\n    setArtistData();\n  }, []);\n  useEffect(() => {\n    if (artist && cityInfo.latitude) getEvents();\n  }, [cityInfo]);\n\n  async function getArtistDetails() {\n    const artistRes = await ArtistTrackerApi.getArtistById(artistId);\n    if (artistRes) setArtist(artistRes.artist);\n  }\n\n  async function getEvents() {\n    try {\n      const eventsRes = await ArtistTrackerApi.getEventsForArtist(artistId, cityInfo.latitude, cityInfo.longitude, radius);\n      if (eventsRes) setEvents(eventsRes.events);\n    } catch (err) {\n      console.log('getEvents error:', err);\n    }\n  }\n\n  async function saveEvent(evt) {\n    console.log(evt.target);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EventList container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid\",\n          src: artist.image,\n          alt: \"artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title text-dark h1\",\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), events.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Venue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: events.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(e.datetime).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venueCity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venueState\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this), currUser && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    onClick: saveEvent,\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 45\n                }, this)]\n              }, e.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-dark\",\n          children: \"NO EVENTS WITHIN SEARCH RADIUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventList, \"YryfULAkLoR/s/kaS2T2O3Flv7A=\");\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js"],"names":["React","useState","useEffect","useContext","ArtistTrackerApi","Button","userContext","EventList","artistId","cityInfo","radius","events","setEvents","artist","setArtist","currUser","setArtistData","getArtistDetails","latitude","getEvents","artistRes","getArtistById","eventsRes","getEventsForArtist","longitude","err","console","log","saveEvent","evt","target","image","name","length","map","e","Date","datetime","toLocaleDateString","venue","venueCity","venueState","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\nimport userContext from './userContext';\n\n/** Renders a list of events in table format for an artist.\n * \n *  If user is logged in, shows button to save an event to their account.\n */\n\nfunction EventList( {artistId, cityInfo, radius} ) {\n    const [events, setEvents] = useState([]);\n    const [artist, setArtist] = useState({});\n    const {currUser} = useContext(userContext);\n\n    // Get artist details when page loads\n    useEffect(() => {\n        async function setArtistData() {\n           await getArtistDetails();\n        }\n        setArtistData();\n    }, [])\n\n    useEffect(() => {\n        if (artist && cityInfo.latitude) getEvents();\n    }, [cityInfo])\n\n    async function getArtistDetails() {\n        const artistRes = await ArtistTrackerApi.getArtistById(artistId);\n        if (artistRes) setArtist(artistRes.artist);\n    }\n\n    async function getEvents() {\n        try {\n            const eventsRes = await ArtistTrackerApi.getEventsForArtist(\n                artistId, cityInfo.latitude, cityInfo.longitude, radius)\n            if (eventsRes) setEvents(eventsRes.events);\n        } catch(err) {\n            console.log('getEvents error:', err)\n        }\n    }\n\n    async function saveEvent(evt) {\n        console.log(evt.target)\n    }\n\n    return(\n        <div className=\"EventList container\">\n            <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                    <img className=\"img-fluid\" src={artist.image} alt=\"artist\" />\n                    <h5 className=\"card-title text-dark h1\">{artist.name}</h5>\n                    {(events.length)\n                    ? <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Venue</th>\n                                <th>City</th>\n                                <th>State</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {events.map(e => {\n                            return (<tr key={e.id}>\n                                        <td>{new Date(e.datetime).toLocaleDateString()}</td>\n                                        <td>{e.venue}</td>\n                                        <td>{e.venueCity}</td>\n                                        <td>{e.venueState}</td>\n                                        {currUser &&\n                                            <td><Button size=\"sm\" onClick={saveEvent}>Save</Button></td>\n                                        }\n                                    </tr>)\n                        })\n                        }     \n                        </tbody>\n                    </table>\n                    :\n                    <div className='text-dark'>NO EVENTS WITHIN SEARCH RADIUS</div>\n                    }\n                </div>\n                {/* end card body */}\n            </div>\n            {/* end card */}\n        </div> \n    )\n}\n\nexport default EventList;\n\n"]},"metadata":{},"sourceType":"module"}