{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\n/** Returns a list of events in table format for an artist.\n * \n *  {data} = {artistId, city, distance}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EventList(_ref) {\n  _s();\n\n  let {\n    artistInfo,\n    cityInfo,\n    radius\n  } = _ref;\n  const [artist, setArtist] = useState({\n    id: \"\",\n    name: \"\",\n    homepage: \"\",\n    image: \"\",\n    ticketsURL: \"\"\n  });\n  const [events, setEvents] = useState([]);\n  console.log(cityInfo);\n  useEffect(() => {\n    // Get details for the artist\n    async function addArtistToState(name) {\n      const res = await ArtistTrackerApi.getArtistByName(name);\n      setArtist(res.artists[0]);\n    }\n\n    addArtistToState(artistInfo);\n  }, []);\n  useEffect(() => {\n    // Get events for the artist\n    async function setEventsInState(artistId, city, distance) {\n      const res = await ArtistTrackerApi.getEventsForArtist(artistId, city, distance);\n      setEvents(res.events);\n    }\n\n    if (artistInfo.id !== '') setEventsInState(artistInfo.id, cityInfo.id, radius);\n  }, [artist]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventList container p-0 border border-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: artist.image,\n            alt: \"artist\",\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"EventList-title col-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fs-2\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Venue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: events.map(e => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(e.datetime).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venueCity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venueState\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"sm\",\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 45\n                  }, this)]\n                }, e.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(EventList, \"UU39U+pPA8/3RQ0PY0dc4QUVJoY=\");\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js"],"names":["React","useState","useEffect","ArtistTrackerApi","Button","EventList","artistInfo","cityInfo","radius","artist","setArtist","id","name","homepage","image","ticketsURL","events","setEvents","console","log","addArtistToState","res","getArtistByName","artists","setEventsInState","artistId","city","distance","getEventsForArtist","map","e","Date","datetime","toLocaleDateString","venue","venueCity","venueState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\n\n/** Returns a list of events in table format for an artist.\n * \n *  {data} = {artistId, city, distance}\n */\n\nfunction EventList( {artistInfo, cityInfo, radius} ) {\n    const [artist, setArtist] = useState({id:\"\", name:\"\", homepage:\"\", image:\"\", ticketsURL: \"\"});\n    const [events, setEvents] = useState([]);\n    console.log(cityInfo);\n    useEffect(() => {\n        // Get details for the artist\n        async function addArtistToState(name) {\n            const res = await ArtistTrackerApi.getArtistByName(name);\n            setArtist(res.artists[0])\n        }\n        addArtistToState(artistInfo);\n    }, [])\n\n    useEffect(() => {\n        // Get events for the artist\n        async function setEventsInState(artistId, city, distance) {\n            const res = await ArtistTrackerApi.getEventsForArtist(\n                artistId, city, distance)\n            setEvents(res.events)\n        }\n        if (artistInfo.id !== '') setEventsInState(artistInfo.id, cityInfo.id, radius)\n    }, [artist])\n\n    return(\n        <>\n            <div className=\"EventList container p-0 border border-light\">\n                <div className=\"row align-items-center\">\n                    <div className=\"col-2\">\n                        <img src={artist.image} alt='artist' className='img-fluid'/>\n                    </div>\n                    <div className='EventList-title col-10'>\n                        <div className='row'>\n                            <p className=\"fs-2\">{artist.name}</p>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <table className='table'>\n                            <thead>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>Venue</th>\n                                    <th>City</th>\n                                    <th>State</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {events.map(e => {\n                                   return (<tr key={e.id}>\n                                            <td>{new Date(e.datetime).toLocaleDateString()}</td>\n                                            <td>{e.venue}</td>\n                                            <td>{e.venueCity}</td>\n                                            <td>{e.venueState}</td>\n                                            <td><Button size=\"sm\">Save</Button></td>\n                                          </tr>)\n                                })}                                \n                            </tbody>\n                        </table>\n                    </div>\n                    \n                </div>\n            </div>\n            \n\n        </>\n    )\n}\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}