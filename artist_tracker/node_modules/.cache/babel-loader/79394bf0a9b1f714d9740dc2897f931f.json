{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport userContext from './userContext';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport UnauthorizedMessage from './UnauthorizedMessage';\nimport ArtistTrackerApi from './api';\nimport './Profile.css';\nimport ArtistItem from './ArtistItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _ = require('lodash');\n\nconst {\n  debounce\n} = _;\n\nfunction Profile(_ref) {\n  _s();\n\n  var _formData$radius;\n\n  let {\n    removeArtist,\n    logout\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const {\n    currUser,\n    setCurrUser,\n    token,\n    usersSavedArtists,\n    setUsersSavedArtists\n  } = useContext(userContext);\n  const [formData, setFormData] = useState({\n    username: currUser.username,\n    firstName: currUser.firstName,\n    email: currUser.email,\n    city: currUser.city,\n    radius: currUser.radius,\n    password: ''\n  });\n  const [citySearch, setCitySearch] = useState(\"\");\n  const [autocompleteCities, setAutocompleteCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState({\n    id: \"\",\n    name: \"\",\n    region: \"\"\n  });\n  const [cityOptionsDisplay, setCityOptionsDisplay] = useState(false);\n  const [artists, setArtists] = useState(usersSavedArtists);\n  const navigate = useNavigate();\n  const debounceLoadCities = useCallback(debounce(str => fetchCities(str), 1200), []);\n\n  async function fetchCities(str) {\n    try {\n      const res = await ArtistTrackerApi.getCitiesForAutocomplete(str);\n      setAutocompleteCities(res.cities);\n    } catch (err) {\n      console.log(err);\n    }\n  } // change handler for city input\n\n\n  const citySearchChange = evt => {\n    setCitySearch(evt.target.value);\n\n    if (citySearch && citySearch.length >= 3) {\n      debounceLoadCities(citySearch);\n    }\n  }; // runs when user selects a city from autocomplete\n\n\n  const setCitySelection = citySelection => {\n    setCitySearch(`${citySelection.name}, ${citySelection.region}`);\n    setSelectedCity(citySelection);\n    setCityOptionsDisplay(false);\n  }; // get user's current city name, state when page loads (to show in form)\n\n\n  useEffect(() => {\n    async function getUserCityName() {\n      const res = await ArtistTrackerApi.getCityById(currUser.city);\n      setCitySearch(`${res.city.name}, ${res.city.region}`);\n      setSelectedCity(res.city);\n    }\n\n    getUserCityName();\n  }, []);\n  useEffect(() => {\n    setArtists(usersSavedArtists);\n  }, [usersSavedArtists]);\n\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => {\n      return { ...data,\n        [name]: value\n      };\n    });\n  }\n\n  function addArtist(evt) {\n    evt.preventDefault();\n    navigate('/addArtist');\n  }\n\n  async function handleUpdate(evt) {\n    try {\n      evt.preventDefault();\n      const user = {\n        id,\n        username: formData.username,\n        firstName: formData.firstName,\n        email: formData.email,\n        city: selectedCity.id,\n        radius: +formData.radius\n      };\n      if (formData.password !== '') user.password = formData.password;\n      const updatedUser = await ArtistTrackerApi.updateUser(user, token);\n      setCurrUser(updatedUser);\n      navigate('/');\n      alert(`User updated successfully.`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function deleteAccount(evt) {\n    evt.preventDefault();\n\n    if (window.confirm('Are you sure you want to delete your account?')) {\n      const res = await ArtistTrackerApi.deleteUserAccount(currUser.id, token);\n      if (res) alert('Account deleted. Thanks for playing!');\n      logout();\n      navigate('/');\n    }\n  }\n\n  if (!token) return /*#__PURE__*/_jsxDEV(UnauthorizedMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row py-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"display-5\",\n        children: currUser.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Profile-content row mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        className: \"Profile-form col p-4 border border-primary\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-4\",\n          children: \"User Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-3\",\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 4,\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-3\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 4,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              autoComplete: \"off\",\n              value: formData.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-3\",\n          controlId: \"firstName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 4,\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: formData.firstName,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-3\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 4,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 4,\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"citySearch\",\n              type: \"text\",\n              name: \"selectedCity\",\n              onClick: () => setCityOptionsDisplay(true),\n              onChange: citySearchChange,\n              value: citySearch,\n              className: \"citySearch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), cityOptionsDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocompleteContainer ps-3 mt-1\",\n              children: autocompleteCities.map(city => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"autocompleteOption\",\n                  onClick: () => setCitySelection(city),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [city.name, \", \", city.region]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 53\n                  }, this)\n                }, city.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-3 align-items-center\",\n          controlId: \"distancePref\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 4,\n            children: \"Event search radius (miles)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              name: \"radius\",\n              value: (_formData$radius = formData.radius) !== null && _formData$radius !== void 0 ? _formData$radius : \"\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onChange: handleChange,\n          onClick: handleUpdate,\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col p-4 border border-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-4\",\n          children: \"Saved artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Profile-artists mb-2 p-3\",\n          children: artists.length ? artists.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ArtistItem, {\n              artist: a.artist,\n              remove: removeArtist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 71\n            }, this)\n          }, a.artist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 48\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"NO ARTISTS SAVED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"col-6 ms-auto\",\n          onClick: addArtist,\n          children: \"Add an artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        href: \"/\",\n        className: \"Profile-homeBtn col-3 my-auto\",\n        children: \"Back to my homepage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        size: \"sm\",\n        className: \"col-1 ms-auto\",\n        onClick: deleteAccount,\n        children: \"Delete My Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"wYbG59T6dAscWhp7mQ35SiVyih0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/Profile.js"],"names":["React","useState","useContext","useEffect","useCallback","useNavigate","useParams","userContext","Form","Row","Col","Button","UnauthorizedMessage","ArtistTrackerApi","ArtistItem","_","require","debounce","Profile","removeArtist","logout","id","currUser","setCurrUser","token","usersSavedArtists","setUsersSavedArtists","formData","setFormData","username","firstName","email","city","radius","password","citySearch","setCitySearch","autocompleteCities","setAutocompleteCities","selectedCity","setSelectedCity","name","region","cityOptionsDisplay","setCityOptionsDisplay","artists","setArtists","navigate","debounceLoadCities","str","fetchCities","res","getCitiesForAutocomplete","cities","err","console","log","citySearchChange","evt","target","value","length","setCitySelection","citySelection","getUserCityName","getCityById","handleChange","data","addArtist","preventDefault","handleUpdate","user","updatedUser","updateUser","alert","deleteAccount","window","confirm","deleteUserAccount","map","a","artist"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback} from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport userContext from './userContext';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport UnauthorizedMessage from './UnauthorizedMessage';\nimport ArtistTrackerApi from './api';\nimport './Profile.css';\nimport ArtistItem from './ArtistItem';\nconst _ = require('lodash');\nconst {debounce} = _;\n\n\nfunction Profile( {removeArtist, logout} ) {  \n    const {id} = useParams();\n    const {currUser, setCurrUser, token, usersSavedArtists, setUsersSavedArtists} = useContext(userContext);\n    const [formData, setFormData] = useState(\n                {username: currUser.username, firstName: currUser.firstName, \n                email: currUser.email, city: currUser.city, \n                radius: currUser.radius, password: ''}\n    );\n    const [citySearch, setCitySearch] = useState(\"\");\n    const [autocompleteCities, setAutocompleteCities] = useState([]);\n    const [selectedCity, setSelectedCity] = useState({id:\"\", name:\"\", region:\"\"});\n    const [cityOptionsDisplay, setCityOptionsDisplay] = useState(false);\n    const [artists, setArtists] = useState(usersSavedArtists);\n\n    const navigate = useNavigate();\n\n    const debounceLoadCities = useCallback(\n        debounce(str => fetchCities(str), 1200), []);\n\n    async function fetchCities(str) {\n        try {\n            const res = await ArtistTrackerApi.getCitiesForAutocomplete(str);\n            setAutocompleteCities(res.cities);\n        } catch(err) {\n            console.log(err);\n        }  \n    }\n\n    // change handler for city input\n    const citySearchChange = evt => {\n        setCitySearch(evt.target.value);\n        if(citySearch && citySearch.length >= 3){\n            debounceLoadCities(citySearch);\n        }\n    }\n\n    // runs when user selects a city from autocomplete\n    const setCitySelection = (citySelection) => {\n        setCitySearch(`${citySelection.name}, ${citySelection.region}`);\n        setSelectedCity(citySelection);\n        setCityOptionsDisplay(false);\n    }\n\n    // get user's current city name, state when page loads (to show in form)\n    useEffect(() => {\n        async function getUserCityName() {\n            const res = await ArtistTrackerApi.getCityById(currUser.city);\n            setCitySearch(`${res.city.name}, ${res.city.region}`); \n            setSelectedCity(res.city);\n        }\n        getUserCityName();\n    }, [])\n\n    useEffect(() => {\n        setArtists(usersSavedArtists);\n    }, [usersSavedArtists])\n\n    function handleChange(evt) {\n        const {name, value} = evt.target;\n        setFormData(data => { \n            return {...data, [name]: value}\n        });\n    }\n\n    function addArtist(evt) {\n        evt.preventDefault();\n        navigate('/addArtist');\n    }\n\n    async function handleUpdate(evt) {\n\n        try {\n            evt.preventDefault();\n            const user = {id,\n                username: formData.username, \n                firstName: formData.firstName, \n                email: formData.email, \n                city: selectedCity.id, \n                radius: +formData.radius}\n            if (formData.password !== '') user.password = formData.password;\n\n          const updatedUser = await ArtistTrackerApi.updateUser(user, token);\n          setCurrUser(updatedUser);\n          navigate('/');\n          alert(`User updated successfully.`)\n        } catch(err) {\n          console.log(err);\n        }\n      }\n\n    async function deleteAccount(evt) {\n        evt.preventDefault();\n        if (window.confirm('Are you sure you want to delete your account?')) {\n            const res = await ArtistTrackerApi.deleteUserAccount(currUser.id, token);\n            if (res) alert('Account deleted. Thanks for playing!');\n            logout();\n            navigate('/');\n        }\n    }\n\n    if (!token) return <UnauthorizedMessage />;\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row py-2\">\n                <p className='display-5'>{currUser.firstName}</p>\n            </div>\n            <div className=\"Profile-content row mb-3\">\n                <Form className=\"Profile-form col p-4 border border-primary\" autoComplete='off'>\n                    <h3 className=\"mb-4\">User Info</h3>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"username\">\n                        <Form.Label column sm={4}>Username</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"text\"\n                                        name=\"username\" \n                                        value={formData.username}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"password\">\n                        <Form.Label column sm={4}>Password</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"password\"\n                                        name=\"password\" \n                                        autoComplete='off'\n                                        value={formData.password}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"firstName\">\n                        <Form.Label column sm={4}>First Name</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"text\"\n                                        name=\"firstName\" \n                                        value={formData.firstName}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"email\">\n                        <Form.Label column sm={4}>Email</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"email\"\n                                        name=\"email\" \n                                        value={formData.email}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\">\n                            <Form.Label column sm={4}>City:</Form.Label>\n                            <Col sm={8}>\n                                <Form.Control id='citySearch' \n                                            type='text' \n                                            name='selectedCity' \n                                            onClick={() => setCityOptionsDisplay(true)}\n                                            onChange={citySearchChange} \n                                            value={citySearch}\n                                            className='citySearch'/>\n                                {cityOptionsDisplay && (\n                                    <div className='autocompleteContainer ps-3 mt-1'>\n                                        {autocompleteCities.map(city => {\n                                            return (\n                                                <div className='autocompleteOption' \n                                                    key={city.id} \n                                                    onClick={() => setCitySelection(city)}>\n                                                    <span>{city.name}, {city.region}</span>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                )}\n                            </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3 align-items-center\" controlId=\"distancePref\">\n                        <Form.Label column sm={4}>Event search radius (miles)</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"number\"\n                                        name=\"radius\" \n                                        value={formData.radius ?? \"\"}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    <Button type=\"submit\" onChange={handleChange} onClick={handleUpdate}>\n                        Save changes\n                    </Button>\n                </Form>\n                <div className=\"col p-4 border border-primary\">\n                    <h3 className=\"mb-4\">Saved artists</h3>\n                    <div className='Profile-artists mb-2 p-3'>\n                        {(artists.length)\n                            ? artists.map(a => <div key={a.artist.id}><ArtistItem \n                                                                    artist={a.artist} \n                                                                    remove={removeArtist}/>\n                    </div>)\n                            : <p>NO ARTISTS SAVED</p>\n                        }\n                    </div>                 \n                    <Button variant=\"primary\" \n                            className=\"col-6 ms-auto\"\n                            onClick={addArtist}>Add an artist</Button>                        \n                </div>\n            </div> \n            {/* ^ end content row */}\n            <div className=\"row\">\n                <Button variant=\"success\" href=\"/\" className=\"Profile-homeBtn col-3 my-auto\">Back to my homepage</Button>\n                <Button variant=\"outline-danger\" \n                        size=\"sm\" \n                        className='col-1 ms-auto'\n                        onClick={deleteAccount}>Delete My Account</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}