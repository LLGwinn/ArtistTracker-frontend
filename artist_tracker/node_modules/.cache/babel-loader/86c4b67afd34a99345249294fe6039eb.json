{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport NavbarComp from './Navbar';\nimport AppRoutes from './Routes';\nimport ArtistTrackerApi from './api';\nimport userContext from './userContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [currUser, setCurrUser] = useState(JSON.parse(localStorage.getItem('currUser')));\n  const [usersSavedArtists, setUsersSavedArtists] = useState([]);\n  const navigate = useNavigate();\n  useEffect(function saveCredentialsToLocalStorage() {\n    localStorage.setItem('token', token);\n    localStorage.setItem('currUser', JSON.stringify(currUser));\n  }, [token, currUser]);\n  useEffect(function getUsersSavedArtists() {\n    if (currUser) updateUserArtistsInState();\n  }, [currUser]);\n\n  async function login(username, password) {\n    try {\n      const result = await ArtistTrackerApi.authenticateUser(username, password);\n\n      if (result.token && result.user) {\n        setToken(result.token);\n        setCurrUser(result.user);\n        navigate('/');\n      } else throw new Error();\n    } catch (err) {\n      alert('Invalid username/password.');\n    }\n  }\n\n  async function signup(newUser) {\n    const userCredentials = await ArtistTrackerApi.registerUser(newUser).catch(err => {\n      console.log(err);\n    });\n    setToken(userCredentials.token);\n    setCurrUser(userCredentials.newUser);\n    navigate('/');\n  }\n\n  function logout() {\n    setToken('');\n    setCurrUser(null);\n    navigate('/');\n  }\n\n  async function updateUserArtistsInState() {\n    const res = await ArtistTrackerApi.getArtistsForUser(currUser.id);\n\n    if (res.artists) {\n      console.log('YES')(res.artists).forEach(async a => {\n        const details = await ArtistTrackerApi.getArtistById(a.id);\n        setUsersSavedArtists(usersSavedArtists => [...usersSavedArtists, details]);\n      });\n    } // get details for each artist and save in usersSavedArtists\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(userContext.Provider, {\n      value: {\n        currUser,\n        setCurrUser,\n        token,\n        usersSavedArtists\n      },\n      children: [/*#__PURE__*/_jsxDEV(NavbarComp, {\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-main container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(AppRoutes, {\n          signup: signup,\n          login: login,\n          logout: logout,\n          updateUserArtistsInState: updateUserArtistsInState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"H5LT+qwngnylpfBvgw1sZgWTpNc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/App.js"],"names":["useState","useEffect","NavbarComp","AppRoutes","ArtistTrackerApi","userContext","useNavigate","App","token","setToken","localStorage","getItem","currUser","setCurrUser","JSON","parse","usersSavedArtists","setUsersSavedArtists","navigate","saveCredentialsToLocalStorage","setItem","stringify","getUsersSavedArtists","updateUserArtistsInState","login","username","password","result","authenticateUser","user","Error","err","alert","signup","newUser","userCredentials","registerUser","catch","console","log","logout","res","getArtistsForUser","id","artists","forEach","a","details","getArtistById"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport NavbarComp from './Navbar';\nimport AppRoutes from './Routes';\nimport ArtistTrackerApi from './api';\nimport userContext from './userContext';\nimport { useNavigate } from 'react-router-dom';\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [currUser, setCurrUser] = useState(JSON.parse(localStorage.getItem('currUser')));\n  const [usersSavedArtists, setUsersSavedArtists] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(function saveCredentialsToLocalStorage() {\n    localStorage.setItem('token', token);\n    localStorage.setItem('currUser', JSON.stringify(currUser));\n  }, [token, currUser])\n\n  useEffect(function getUsersSavedArtists() {\n    if(currUser) updateUserArtistsInState();\n  }, [currUser])\n\n  async function login(username, password) {\n    try {\n      const result = await ArtistTrackerApi.authenticateUser(username, password);\n      if (result.token && result.user) {\n        setToken(result.token);\n        setCurrUser(result.user);\n        navigate('/'); \n      } else throw new Error()\n    } catch(err) {\n      alert ('Invalid username/password.')\n    }\n  }\n\n  async function signup(newUser) {\n    const userCredentials = await ArtistTrackerApi.registerUser(newUser).catch((err) => {\n      console.log(err);\n    });\n    setToken(userCredentials.token);\n    setCurrUser(userCredentials.newUser);\n    navigate('/');\n  }\n\n  function logout() {\n    setToken('');\n    setCurrUser(null);\n    navigate('/');\n  }\n\n  async function updateUserArtistsInState() {\n    const res = await ArtistTrackerApi.getArtistsForUser(currUser.id);\n    if (res.artists) {\n      console.log('YES')\n      (res.artists).forEach(async (a) => {\n        const details = await ArtistTrackerApi.getArtistById(a.id);\n        setUsersSavedArtists(usersSavedArtists => \n          [...usersSavedArtists, details]);\n      })\n    }\n    // get details for each artist and save in usersSavedArtists\n  }\n\n  return (\n      <div className=\"App\">\n          <userContext.Provider value={{currUser, setCurrUser, token, usersSavedArtists}}>\n              <NavbarComp logout={logout}/>\n              <div className=\"App-main container-fluid\">\n                <AppRoutes signup={signup} \n                           login={login} \n                           logout={logout} \n                           updateUserArtistsInState={updateUserArtistsInState}/>\n              </div>\n          </userContext.Provider>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}