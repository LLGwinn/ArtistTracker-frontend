{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/SignupForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ArtistTrackerApi from './api';\nimport './SignupForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _ = require('lodash');\n\nconst {\n  debounce\n} = _;\n\nfunction SignupForm(_ref) {\n  _s();\n\n  let {\n    signup\n  } = _ref;\n  const INITIAL_DATA = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    email: \"\",\n    city: \"\",\n    radius: \"\"\n  };\n  const [formData, setFormData] = useState(INITIAL_DATA);\n  const [citySearch, setCitySearch] = useState(\"\");\n  const [autocompleteCities, setAutocompleteCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState({\n    id: \"\",\n    name: \"\",\n    region: \"\"\n  });\n  const [cityOptionsDisplay, setCityOptionsDisplay] = useState(false);\n  const debounceLoadCities = useCallback(debounce(str => fetchCities(str), 1200), []);\n\n  async function fetchCities(str) {\n    try {\n      const res = await ArtistTrackerApi.getCitiesForAutocomplete(str);\n      setAutocompleteCities(res.cities);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const citySearchChange = evt => {\n    setCitySearch(evt.target.value);\n\n    if (citySearch && citySearch.length >= 3) {\n      debounceLoadCities(citySearch);\n    }\n  };\n\n  const setCitySelection = citySelection => {\n    setCitySearch(`${citySelection.name}, ${citySelection.region}`);\n    setSelectedCity(citySelection);\n    setCityOptionsDisplay(false);\n  };\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => {\n      return { ...data,\n        [name]: value\n      };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newUser = {\n      username: formData.username,\n      password: formData.password,\n      firstName: formData.firstName,\n      email: formData.email,\n      city: selectedCity.id,\n      radius: +formData.radius\n    };\n    signup(newUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row py-2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"display-6\",\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3 py-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"SignupForm\",\n            onSubmit: handleSubmit,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mb-3 justify-content-center\",\n              controlId: \"username\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                column: true,\n                sm: 2,\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"username\",\n                  value: formData.username,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mb-3\",\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                column: true,\n                sm: 2,\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  value: formData.password,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mb-3\",\n              controlId: \"firstName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                column: true,\n                sm: 2,\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"firstName\",\n                  value: formData.firstName,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mb-3\",\n              controlId: \"formEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                column: true,\n                sm: 2,\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  name: \"email\",\n                  value: formData.email,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                column: true,\n                sm: 2,\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 4,\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"citySearch\",\n                  type: \"text\",\n                  name: \"selectedCity\",\n                  onClick: () => setCityOptionsDisplay(true),\n                  onChange: citySearchChange,\n                  value: citySearch,\n                  className: \"citySearch\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 33\n                }, this), cityOptionsDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"autocompleteContainer ps-3 mt-1\",\n                  children: autocompleteCities.map(city => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"autocompleteOption\",\n                      onClick: () => setCitySelection(city),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [city.name, \", \", city.region]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 53\n                      }, this)\n                    }, city.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mb-3\",\n              controlId: \"formDistance\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                column: true,\n                sm: 4,\n                children: \"Preferred search distance (miles)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 2,\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  name: \"radius\",\n                  value: formData.radius,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"mx-auto\",\n              type: \"submit\",\n              variant: \"dark\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignupForm, \"AO22bZw7GXJO4ugnwLjH5R7pEho=\");\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/SignupForm.js"],"names":["React","useState","useCallback","Form","Button","Row","Col","ArtistTrackerApi","_","require","debounce","SignupForm","signup","INITIAL_DATA","username","password","firstName","email","city","radius","formData","setFormData","citySearch","setCitySearch","autocompleteCities","setAutocompleteCities","selectedCity","setSelectedCity","id","name","region","cityOptionsDisplay","setCityOptionsDisplay","debounceLoadCities","str","fetchCities","res","getCitiesForAutocomplete","cities","err","console","log","citySearchChange","evt","target","value","length","setCitySelection","citySelection","handleChange","data","handleSubmit","preventDefault","newUser","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,gBAAP,MAA6B,OAA7B;AACA,OAAO,kBAAP;;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAaF,CAAnB;;AAEA,SAASG,UAAT,OAAgC;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAC5B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,QAAQ,EAAE,EAFO;AAGjBC,IAAAA,SAAS,EAAE,EAHM;AAIjBC,IAAAA,KAAK,EAAE,EAJU;AAKjBC,IAAAA,IAAI,EAAE,EALW;AAMjBC,IAAAA,MAAM,EAAE;AANS,GAArB;AAQA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAACY,YAAD,CAAxC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACuB,kBAAD,EAAqBC,qBAArB,IAA8CxB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC;AAAC2B,IAAAA,EAAE,EAAC,EAAJ;AAAQC,IAAAA,IAAI,EAAC,EAAb;AAAiBC,IAAAA,MAAM,EAAC;AAAxB,GAAD,CAAhD;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8C/B,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAMgC,kBAAkB,GAAG/B,WAAW,CAClCQ,QAAQ,CAACwB,GAAG,IAAIC,WAAW,CAACD,GAAD,CAAnB,EAA0B,IAA1B,CAD0B,EACO,EADP,CAAtC;;AAGA,iBAAeC,WAAf,CAA2BD,GAA3B,EAAgC;AAC5B,QAAI;AACA,YAAME,GAAG,GAAG,MAAM7B,gBAAgB,CAAC8B,wBAAjB,CAA0CH,GAA1C,CAAlB;AACAT,MAAAA,qBAAqB,CAACW,GAAG,CAACE,MAAL,CAArB;AACH,KAHD,CAGE,OAAMC,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAED,QAAMG,gBAAgB,GAAGC,GAAG,IAAI;AAC5BpB,IAAAA,aAAa,CAACoB,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAb;;AACA,QAAGvB,UAAU,IAAIA,UAAU,CAACwB,MAAX,IAAqB,CAAtC,EAAwC;AACpCb,MAAAA,kBAAkB,CAACX,UAAD,CAAlB;AACH;AACJ,GALD;;AAOA,QAAMyB,gBAAgB,GAAIC,aAAD,IAAmB;AACxCzB,IAAAA,aAAa,CAAE,GAAEyB,aAAa,CAACnB,IAAK,KAAImB,aAAa,CAAClB,MAAO,EAAhD,CAAb;AACAH,IAAAA,eAAe,CAACqB,aAAD,CAAf;AACAhB,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,GAJD;;AAMA,QAAMiB,YAAY,GAAGN,GAAG,IAAI;AACxB,UAAM;AAACd,MAAAA,IAAD;AAAOgB,MAAAA;AAAP,QAAgBF,GAAG,CAACC,MAA1B;AACAvB,IAAAA,WAAW,CAAC6B,IAAI,IAAI;AAChB,aAAO,EAAC,GAAGA,IAAJ;AAAU,SAACrB,IAAD,GAAQgB;AAAlB,OAAP;AACH,KAFU,CAAX;AAGH,GALD;;AAOA,QAAMM,YAAY,GAAGR,GAAG,IAAI;AACxBA,IAAAA,GAAG,CAACS,cAAJ;AACA,UAAMC,OAAO,GAAG;AACRvC,MAAAA,QAAQ,EAACM,QAAQ,CAACN,QADV;AAERC,MAAAA,QAAQ,EAACK,QAAQ,CAACL,QAFV;AAGRC,MAAAA,SAAS,EAACI,QAAQ,CAACJ,SAHX;AAIRC,MAAAA,KAAK,EAACG,QAAQ,CAACH,KAJP;AAKRC,MAAAA,IAAI,EAACQ,YAAY,CAACE,EALV;AAMRT,MAAAA,MAAM,EAAE,CAACC,QAAQ,CAACD;AANV,KAAhB;AAQAP,IAAAA,MAAM,CAACyC,OAAD,CAAN;AACH,GAXD;;AAaA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAIA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,YAAhB;AAA6B,YAAA,QAAQ,EAAEF,YAAvC;AAAqD,YAAA,YAAY,EAAC,KAAlE;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAE9C,GAAhB;AAAqB,cAAA,SAAS,EAAC,6BAA/B;AAA6D,cAAA,SAAS,EAAC,UAAvE;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,MAAM,MAAlB;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,MAAnB;AACY,kBAAA,IAAI,EAAC,UADjB;AAEY,kBAAA,KAAK,EAAEe,QAAQ,CAACN,QAF5B;AAGY,kBAAA,QAAQ,EAAEmC,YAHtB;AAIY,kBAAA,QAAQ;AAJpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAE5C,GAAhB;AAAqB,cAAA,SAAS,EAAC,MAA/B;AAAsC,cAAA,SAAS,EAAC,UAAhD;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,MAAM,MAAlB;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,UAAnB;AACY,kBAAA,IAAI,EAAC,UADjB;AAEY,kBAAA,KAAK,EAAEe,QAAQ,CAACL,QAF5B;AAGY,kBAAA,QAAQ,EAAEkC,YAHtB;AAIY,kBAAA,QAAQ;AAJpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAqBI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAE5C,GAAhB;AAAqB,cAAA,SAAS,EAAC,MAA/B;AAAsC,cAAA,SAAS,EAAC,WAAhD;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,MAAM,MAAlB;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,MAAnB;AACY,kBAAA,IAAI,EAAC,WADjB;AAEY,kBAAA,KAAK,EAAEe,QAAQ,CAACJ,SAF5B;AAGY,kBAAA,QAAQ,EAAEiC,YAHtB;AAIY,kBAAA,QAAQ;AAJpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ,eA+BI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAE5C,GAAhB;AAAqB,cAAA,SAAS,EAAC,MAA/B;AAAsC,cAAA,SAAS,EAAC,WAAhD;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,MAAM,MAAlB;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,OAAnB;AACY,kBAAA,IAAI,EAAC,OADjB;AAEY,kBAAA,KAAK,EAAEe,QAAQ,CAACH,KAF5B;AAGY,kBAAA,QAAQ,EAAEgC,YAHtB;AAIY,kBAAA,QAAQ;AAJpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/BJ,eAyCI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAE5C,GAAhB;AAAqB,cAAA,SAAS,EAAC,MAA/B;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,MAAM,MAAlB;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,wCACI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,EAAE,EAAC,YAAjB;AACY,kBAAA,IAAI,EAAC,MADjB;AAEY,kBAAA,IAAI,EAAC,cAFjB;AAGY,kBAAA,OAAO,EAAE,MAAM2B,qBAAqB,CAAC,IAAD,CAHhD;AAIY,kBAAA,QAAQ,EAAEU,gBAJtB;AAKY,kBAAA,KAAK,EAAEpB,UALnB;AAMY,kBAAA,SAAS,EAAC,YANtB;AAOY,kBAAA,QAAQ;AAPpB;AAAA;AAAA;AAAA;AAAA,wBADJ,EASKS,kBAAkB,iBACf;AAAK,kBAAA,SAAS,EAAC,iCAAf;AAAA,4BACKP,kBAAkB,CAAC8B,GAAnB,CAAuBpC,IAAI,IAAI;AAC5B,wCACI;AAAK,sBAAA,SAAS,EAAC,oBAAf;AAEI,sBAAA,OAAO,EAAE,MAAM6B,gBAAgB,CAAC7B,IAAD,CAFnC;AAAA,6CAGI;AAAA,mCAAOA,IAAI,CAACW,IAAZ,QAAoBX,IAAI,CAACY,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,uBACSZ,IAAI,CAACU,EADd;AAAA;AAAA;AAAA;AAAA,4BADJ;AAOH,mBARA;AADL;AAAA;AAAA;AAAA;AAAA,wBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzCJ,eAmEI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAEvB,GAAhB;AAAqB,cAAA,SAAS,EAAC,MAA/B;AAAsC,cAAA,SAAS,EAAC,cAAhD;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,MAAM,MAAlB;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,QAAnB;AACY,kBAAA,IAAI,EAAC,QADjB;AAEY,kBAAA,KAAK,EAAEe,QAAQ,CAACD,MAF5B;AAGY,kBAAA,QAAQ,EAAE8B,YAHtB;AAIY,kBAAA,QAAQ;AAJpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnEJ,eA6EI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,SAAlB;AAA4B,cAAA,IAAI,EAAC,QAAjC;AAA0C,cAAA,OAAO,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4FH;;GAxJQtC,U;;KAAAA,U;AA0JT,eAAeA,UAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ArtistTrackerApi from './api';\nimport './SignupForm.css';\nconst _ = require('lodash');\nconst {debounce} = _;\n\nfunction SignupForm( {signup} ) {\n    const INITIAL_DATA = {\n        username: \"\",\n        password: \"\",\n        firstName: \"\",\n        email: \"\",\n        city: \"\",\n        radius: \"\"\n    }\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [citySearch, setCitySearch] = useState(\"\");\n    const [autocompleteCities, setAutocompleteCities] = useState([]);\n    const [selectedCity, setSelectedCity] = useState({id:\"\", name:\"\", region:\"\"});\n    const [cityOptionsDisplay, setCityOptionsDisplay] = useState(false);\n\n    const debounceLoadCities = useCallback(\n        debounce(str => fetchCities(str), 1200), []);\n\n    async function fetchCities(str) {\n        try {\n            const res = await ArtistTrackerApi.getCitiesForAutocomplete(str);\n            setAutocompleteCities(res.cities);\n        } catch(err) {\n            console.log(err);\n        }  \n    }\n\n    const citySearchChange = evt => {\n        setCitySearch(evt.target.value);\n        if(citySearch && citySearch.length >= 3){\n            debounceLoadCities(citySearch);\n        }\n    }\n\n    const setCitySelection = (citySelection) => {\n        setCitySearch(`${citySelection.name}, ${citySelection.region}`);\n        setSelectedCity(citySelection);\n        setCityOptionsDisplay(false);\n    }\n\n    const handleChange = evt => {\n        const {name, value} = evt.target;\n        setFormData(data => { \n            return {...data, [name]: value}\n        });\n    }\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const newUser = {\n                username:formData.username, \n                password:formData.password, \n                firstName:formData.firstName, \n                email:formData.email,\n                city:selectedCity.id,\n                radius: +formData.radius\n            }\n        signup(newUser);\n    }\n\n    return (\n        <div>\n            <div className=\"container-fluid\">\n                <div className=\"row py-2\">\n                    <p className=\"display-6\">Create an Account</p>\n                </div>\n            <div className=\"row mb-3 py-4\">\n                <div className=\"col-6 mx-auto\">\n                    <Form className=\"SignupForm\" onSubmit={handleSubmit} autoComplete='off'>\n                        <Form.Group as={Row} className=\"mb-3 justify-content-center\" controlId=\"username\">\n                            <Form.Label column sm={2}>Username</Form.Label>\n                            <Col sm={4}>\n                                <Form.Control type=\"text\"\n                                            name=\"username\"\n                                            value={formData.username}\n                                            onChange={handleChange} \n                                            required />\n                             </Col>\n                        </Form.Group>\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"password\">\n                            <Form.Label column sm={2}>Password</Form.Label>\n                            <Col sm={4}>\n                                <Form.Control type=\"password\"\n                                            name=\"password\" \n                                            value={formData.password}\n                                            onChange={handleChange}\n                                            required />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"firstName\">\n                            <Form.Label column sm={2}>First Name</Form.Label>\n                            <Col sm={4}>\n                                <Form.Control type=\"text\"\n                                            name=\"firstName\" \n                                            value={formData.firstName}\n                                            onChange={handleChange}\n                                            required />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"formEmail\">\n                            <Form.Label column sm={2}>Email</Form.Label>\n                            <Col sm={4}>\n                                <Form.Control type=\"email\"\n                                            name=\"email\" \n                                            value={formData.email}\n                                            onChange={handleChange}\n                                            required />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group as={Row} className=\"mb-3\">\n                            <Form.Label column sm={2}>City:</Form.Label>\n                            <Col sm={4}>\n                                <Form.Control id='citySearch' \n                                            type='text' \n                                            name='selectedCity' \n                                            onClick={() => setCityOptionsDisplay(true)}\n                                            onChange={citySearchChange} \n                                            value={citySearch} \n                                            className='citySearch'\n                                            required />\n                                {cityOptionsDisplay && (\n                                    <div className='autocompleteContainer ps-3 mt-1'>\n                                        {autocompleteCities.map(city => {\n                                            return (\n                                                <div className='autocompleteOption' \n                                                    key={city.id} \n                                                    onClick={() => setCitySelection(city)}>\n                                                    <span>{city.name}, {city.region}</span>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                )}\n                            </Col>\n                        </Form.Group>\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"formDistance\">\n                            <Form.Label column sm={4}>Preferred search distance (miles)</Form.Label>\n                            <Col sm={2}>\n                                <Form.Control type=\"number\"\n                                            name=\"radius\" \n                                            value={formData.radius}\n                                            onChange={handleChange}\n                                            required />\n                            </Col>\n                        </Form.Group>\n                        <Button className=\"mx-auto\" type=\"submit\" variant=\"dark\">Submit</Button>\n                    </Form>\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}