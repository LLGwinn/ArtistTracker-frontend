{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/AddArtistForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst _ = require('lodash');\n\nconst {\n  debounce\n} = _;\n\nfunction AddArtistForm() {\n  _s();\n\n  const [artistSearch, setArtistSearch] = useState(\"\");\n  const [autocompleteArtists, setAutocompleteArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState({\n    name: \"\"\n  });\n  const [artistOptionsDisplay, setArtistOptionsDisplay] = useState(false);\n  const debounceLoadArtists = useCallback(debounce(str => fetchArtists(str), 1000), []);\n\n  async function fetchArtists(str) {\n    try {\n      const res = await ArtistTrackerApi.getArtistsForAutocomplete(str);\n      setAutocompleteArtists(res.artist);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const artistSearchChange = evt => {\n    setArtistSearch(evt.target.value);\n\n    if (artistSearch && artistSearch.length >= 3) {\n      debounceLoadArtists(artistSearch);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Artist name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"artistSearch\",\n          type: \"text\",\n          name: \"selectedArtist\",\n          onClick: () => setArtistOptionsDisplay(!artistOptionsDisplay),\n          onChange: artistSearchChange,\n          value: artistSearch,\n          className: \"artistSearch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), artistOptionsDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocompleteContainer ps-3 mt-1\",\n          children: autocompleteArtists.map(artist => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocompleteOption\",\n              onClick: () => setArtistSelection(artist),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 41\n              }, this)\n            }, artist.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddArtistForm, \"weMzEKd3LkCXZKkyDEYEDQpDolE=\");\n\n_c = AddArtistForm;\nexport default AddArtistForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddArtistForm\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/AddArtistForm.js"],"names":["React","useState","Form","_","require","debounce","AddArtistForm","artistSearch","setArtistSearch","autocompleteArtists","setAutocompleteArtists","selectedArtist","setSelectedArtist","name","artistOptionsDisplay","setArtistOptionsDisplay","debounceLoadArtists","useCallback","str","fetchArtists","res","ArtistTrackerApi","getArtistsForAutocomplete","artist","err","console","log","artistSearchChange","evt","target","value","length","map","setArtistSelection","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;;AAEA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAaF,CAAnB;;AAEA,SAASG,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC;AAACY,IAAAA,IAAI,EAAC;AAAN,GAAD,CAApD;AACA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDd,QAAQ,CAAC,KAAD,CAAhE;AAEA,QAAMe,mBAAmB,GAAGC,WAAW,CACnCZ,QAAQ,CAACa,GAAG,IAAIC,YAAY,CAACD,GAAD,CAApB,EAA2B,IAA3B,CAD2B,EACO,EADP,CAAvC;;AAGA,iBAAeC,YAAf,CAA4BD,GAA5B,EAAiC;AAC7B,QAAI;AACA,YAAME,GAAG,GAAG,MAAMC,gBAAgB,CAACC,yBAAjB,CAA2CJ,GAA3C,CAAlB;AACAR,MAAAA,sBAAsB,CAACU,GAAG,CAACG,MAAL,CAAtB;AACH,KAHD,CAGE,OAAMC,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAED,QAAMG,kBAAkB,GAAGC,GAAG,IAAI;AAC9BpB,IAAAA,eAAe,CAACoB,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAf;;AACA,QAAGvB,YAAY,IAAIA,YAAY,CAACwB,MAAb,IAAuB,CAA1C,EAA4C;AACxCf,MAAAA,mBAAmB,CAACT,YAAD,CAAnB;AACH;AACJ,GALD;;AAOA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,cAAjB;AACc,UAAA,IAAI,EAAC,MADnB;AAEc,UAAA,IAAI,EAAC,gBAFnB;AAGc,UAAA,OAAO,EAAE,MAAMQ,uBAAuB,CAAC,CAACD,oBAAF,CAHpD;AAIc,UAAA,QAAQ,EAAEa,kBAJxB;AAKc,UAAA,KAAK,EAAEpB,YALrB;AAMc,UAAA,SAAS,EAAC;AANxB;AAAA;AAAA;AAAA;AAAA,gBAFJ,EASKO,oBAAoB,iBACjB;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,oBACKL,mBAAmB,CAACuB,GAApB,CAAwBT,MAAM,IAAI;AAC/B,gCACI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAEI,cAAA,OAAO,EAAE,MAAMU,kBAAkB,CAACV,MAAD,CAFrC;AAAA,qCAGI;AAAA,0BAAOA,MAAM,CAACV;AAAd;AAAA;AAAA;AAAA;AAAA;AAHJ,eACSU,MAAM,CAACW,EADhB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH,WARA;AADL;AAAA;AAAA;AAAA;AAAA,gBAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA+BH;;GAxDQ5B,a;;KAAAA,a;AA0DT,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst _ = require('lodash');\nconst {debounce} = _;\n\nfunction AddArtistForm() {\n    const [artistSearch, setArtistSearch] = useState(\"\");\n    const [autocompleteArtists, setAutocompleteArtists] = useState([]);\n    const [selectedArtist, setSelectedArtist] = useState({name:\"\"});\n    const [artistOptionsDisplay, setArtistOptionsDisplay] = useState(false);\n\n    const debounceLoadArtists = useCallback(\n        debounce(str => fetchArtists(str), 1000), []);\n\n    async function fetchArtists(str) {\n        try {\n            const res = await ArtistTrackerApi.getArtistsForAutocomplete(str);\n            setAutocompleteArtists(res.artist);\n        } catch(err) {\n            console.log(err);\n        }  \n    }\n\n    const artistSearchChange = evt => {\n        setArtistSearch(evt.target.value);\n        if(artistSearch && artistSearch.length >= 3){\n            debounceLoadArtists(artistSearch);\n        }\n    }\n\n    return (\n        <>\n            <Form>\n                <Form.Group>\n                    <Form.Label>Artist name:</Form.Label>\n                    <Form.Control id='artistSearch' \n                                  type='text' \n                                  name='selectedArtist' \n                                  onClick={() => setArtistOptionsDisplay(!artistOptionsDisplay)}\n                                  onChange={artistSearchChange} \n                                  value={artistSearch} \n                                  className='artistSearch'/>\n                    {artistOptionsDisplay && (\n                        <div className='autocompleteContainer ps-3 mt-1'>\n                            {autocompleteArtists.map(artist => {\n                                return (\n                                    <div className='autocompleteOption' \n                                        key={artist.id} \n                                        onClick={() => setArtistSelection(artist)}>\n                                        <span>{artist.name}</span>\n                                    </div>\n                                )\n                            })}\n\n                        </div>\n                    )}\n                </Form.Group>\n            </Form>\n        </>\n    )\n\n}\n\nexport default AddArtistForm;"]},"metadata":{},"sourceType":"module"}