{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\n/** Returns a list of events in table format for an artist.\n * \n *  {data} = {artistId, city, distance}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EventList(_ref) {\n  _s();\n\n  let {\n    artistInfo,\n    cityInfo,\n    radius\n  } = _ref;\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Get events for the artist\n    const cityLat = cityInfo.latitude;\n    const cityLong = cityInfo.longitude;\n\n    async function getArtistEvents(artistId, cityLat, cityLong, radius) {\n      const res = await ArtistTrackerApi.getEventsForArtist(artistId, cityLat, cityLong, radius);\n      if (res.events) setEvents(res.events);\n    }\n\n    if (artistInfo.id !== '') getArtistEvents(artistInfo.id, cityLat, cityLong, radius);\n    console.log('EVENTS', events);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventList container p-0 border border-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: artistInfo.image,\n            alt: \"artist\",\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"EventList-title col-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fs-2\",\n              children: artistInfo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: events.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Venue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: events.map(e => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(e.datetime).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venueCity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venueState\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"sm\",\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this)]\n                }, e.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-5\",\n            children: \"NO EVENTS AT THIS TIME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(EventList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js"],"names":["React","useState","useEffect","ArtistTrackerApi","Button","EventList","artistInfo","cityInfo","radius","events","setEvents","cityLat","latitude","cityLong","longitude","getArtistEvents","artistId","res","getEventsForArtist","id","console","log","image","name","length","map","e","Date","datetime","toLocaleDateString","venue","venueCity","venueState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\n\n/** Returns a list of events in table format for an artist.\n * \n *  {data} = {artistId, city, distance}\n */\n\nfunction EventList( {artistInfo, cityInfo, radius} ) {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        // Get events for the artist\n        const cityLat = cityInfo.latitude;\n        const cityLong = cityInfo.longitude;\n\n        async function getArtistEvents(artistId, cityLat, cityLong, radius) {\n            const res = await ArtistTrackerApi.getEventsForArtist(\n                artistId, cityLat, cityLong, radius)\n            if (res.events) setEvents(res.events);\n        }\n\n        if (artistInfo.id !== '') getArtistEvents(artistInfo.id, cityLat, cityLong, radius);\n        console.log('EVENTS', events)\n    }, [])\n\n    return(\n        <>\n            <div className=\"EventList container p-0 border border-light\">\n                <div className=\"row align-items-center\">\n                    <div className=\"col-2\">\n                        <img src={artistInfo.image} alt='artist' className='img-fluid'/>\n                    </div>\n                    <div className='EventList-title col-10'>\n                        <div className='row'>\n                            <p className=\"fs-2\">{artistInfo.name}</p>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        {(events.length)\n                        ?\n                        <table className='table'>\n                            <thead>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>Venue</th>\n                                    <th>City</th>\n                                    <th>State</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {events.map(e => {\n                                        return (<tr key={e.id}>\n                                            <td>{new Date(e.datetime).toLocaleDateString()}</td>\n                                            <td>{e.venue}</td>\n                                            <td>{e.venueCity}</td>\n                                            <td>{e.venueState}</td>\n                                            <td><Button size=\"sm\">Save</Button></td>\n                                          </tr>)\n                                    })\n                                }     \n                            </tbody>\n                        </table>\n                        :\n                        <div className='p-5'>NO EVENTS AT THIS TIME</div>\n                    }\n                    </div>\n                    \n                </div>\n            </div>\n            \n\n        </>\n    )\n}\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}