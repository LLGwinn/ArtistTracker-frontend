{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/GuestForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './GuestForm.css';\nimport EventList from './EventList';\nimport ArtistTrackerApi from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst _ = require('lodash');\n\nconst {\n  debounce\n} = _;\n\nfunction GuestForm() {\n  _s();\n\n  var _formData$artistName, _searchText$searchTex, _formData$distance;\n\n  const INITIAL_DATA = {\n    artistName: \"\",\n    city: \"\",\n    distance: \"\"\n  };\n  const [formData, setFormData] = useState([INITIAL_DATA]);\n  const [submitted, setSubmitted] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [cities, setCities] = useState([]);\n  const debounceLoadData = useCallback(debounce(str => fetchCities(str), 1000), []);\n\n  async function fetchCities(str) {\n    try {\n      const res = await ArtistTrackerApi.getCitiesForAutocomplete(str);\n      setCities(res.cities);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => {\n      return { ...data,\n        [name]: value\n      };\n    });\n  };\n\n  const handleSearchTextChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setSearchText(data => {\n      return { ...data,\n        [name]: value\n      };\n    });\n\n    if (searchText.searchText && searchText.searchText.length >= 4) {\n      debounceLoadData(searchText.searchText);\n    }\n  };\n\n  const updateFormCity = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => {\n      return { ...data,\n        [name]: value\n      };\n    });\n    console.log('Form Data', formData);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const searchData = {\n      artistName: formData.artistName,\n      city: formData.city,\n      distance: formData.distance\n    };\n    setFormData(searchData);\n    setSubmitted(true);\n  };\n\n  return submitted === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"GuestForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formArtist\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Which artist would you like to see?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"artistName\",\n          value: (_formData$artistName = formData.artistName) !== null && _formData$artistName !== void 0 ? _formData$artistName : \"\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formSearchText\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter your city:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"searchText\",\n          value: (_searchText$searchTex = searchText.searchText) !== null && _searchText$searchTex !== void 0 ? _searchText$searchTex : \"\",\n          onChange: handleSearchTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        className: \"mb-3\",\n        name: \"city\",\n        value: formData.city,\n        onChange: updateFormCity,\n        children: cities.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: el.id,\n            children: [el.name, \", \", el.region]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formDistance\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"How far are you willing to travel to see this artist?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          name: \"distance\",\n          value: (_formData$distance = formData.distance) !== null && _formData$distance !== void 0 ? _formData$distance : \"\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Find my artist!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventList, {\n      data: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(GuestForm, \"Ymm4+IfIGk+y+WNBoV8Z4iRSexw=\");\n\n_c = GuestForm;\nexport default GuestForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuestForm\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/GuestForm.js"],"names":["React","useEffect","useState","useCallback","Form","Button","EventList","ArtistTrackerApi","_","require","debounce","GuestForm","INITIAL_DATA","artistName","city","distance","formData","setFormData","submitted","setSubmitted","searchText","setSearchText","cities","setCities","debounceLoadData","str","fetchCities","res","getCitiesForAutocomplete","err","console","log","handleChange","evt","name","value","target","data","handleSearchTextChange","length","updateFormCity","handleSubmit","preventDefault","searchData","map","el","id","region"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './GuestForm.css';\nimport EventList from './EventList';\nimport ArtistTrackerApi from './api';\nconst _ = require('lodash');\nconst {debounce} = _;\n\nfunction GuestForm() {\n    const INITIAL_DATA = {artistName:\"\", city:\"\", distance:\"\"};\n    const [formData, setFormData] = useState([INITIAL_DATA]);\n    const [submitted, setSubmitted] = useState(false);\n    const [searchText, setSearchText] = useState(\"\");\n    const [cities, setCities] = useState([]);\n    const debounceLoadData = useCallback(\n                                debounce(str => fetchCities(str), 1000), []);\n\n    async function fetchCities(str) {\n        try {\n            const res = await ArtistTrackerApi.getCitiesForAutocomplete(str);\n            setCities(res.cities);\n        } catch(err) {\n            console.log(err);\n        }  \n    }\n\n    const handleChange = evt => {\n        const {name, value} = evt.target;\n        setFormData(data => { \n            return {...data, [name]: value}\n        });\n    }\n\n    const handleSearchTextChange = evt => {\n        const {name, value} = evt.target;\n        setSearchText(data => { \n            return {...data, [name]: value}\n        });\n        if(searchText.searchText && searchText.searchText.length >= 4){\n            debounceLoadData(searchText.searchText);\n        }\n    }\n\n    const updateFormCity = evt => {\n        const {name, value} = evt.target;\n        setFormData(data => {\n            return {...data, [name]: value}\n        })\n        console.log('Form Data', formData);\n\n    }\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const searchData = {artistName: formData.artistName,\n                        city: formData.city,\n                        distance: formData.distance}\n        setFormData(searchData);\n        setSubmitted(true);\n    }\n\n    return (\n        (submitted === false)\n        ?\n        <>\n            <Form className=\"GuestForm\" onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formArtist\">\n                    <Form.Label>Which artist would you like to see?</Form.Label>\n                    <Form.Control type=\"text\"\n                                  name=\"artistName\" \n                                  value={formData.artistName ?? \"\"} \n                                  onChange={handleChange} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formSearchText\">\n                    <Form.Label>Enter your city:</Form.Label>\n                    <Form.Control type=\"text\"\n                                  name=\"searchText\" \n                                  value={searchText.searchText ?? \"\"} \n                                  onChange={handleSearchTextChange} />\n                </Form.Group>\n                <Form.Select className=\"mb-3\" name=\"city\" value={formData.city} onChange={updateFormCity}>\n                    {cities.map (el => {\n                        return <option key={el.id} value={el.id}>{el.name}, {el.region}</option>\n                    })}\n                </Form.Select>\n                <Form.Group className=\"mb-3\" controlId=\"formDistance\">\n                    <Form.Label>How far are you willing to travel to see this artist?</Form.Label>\n                    <Form.Control type=\"number\"\n                                  name=\"distance\" \n                                  value={formData.distance ?? \"\"} \n                                  onChange={handleChange} />\n                </Form.Group>\n\n                <Button type=\"submit\">Find my artist!</Button>\n            </Form>\n        </>\n        :\n        <>\n            <EventList data={formData} />\n        </>\n    )\n}\n\nexport default GuestForm;\n\n\n\n"]},"metadata":{},"sourceType":"module"}