{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\nimport userContext from './userContext';\n/** Renders a list of events in table format for an artist.\n * \n *  If user is logged in, shows button to save an event to their account.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventList(_ref) {\n  _s();\n\n  let {\n    artistId,\n    cityId,\n    radius\n  } = _ref;\n  const [events, setEvents] = useState([]);\n  const [city, setCity] = useState({});\n  const [artist, setArtist] = useState({});\n  const {\n    currUser\n  } = useContext(userContext);\n\n  async function getArtistDetails() {\n    const artistRes = await ArtistTrackerApi.getArtistById(artistId);\n    setArtist(artistRes.artist);\n  }\n\n  async function getCityDetails() {\n    const cityRes = await ArtistTrackerApi.getCityById(cityId);\n    setCity(cityRes.city);\n    console.log('CITY AFTER SETTING:', city);\n  }\n\n  async function getEvents() {\n    const eventsRes = await ArtistTrackerApi.getEventsForArtist(artistId, city.latitude, city.longitude, radius);\n    if (eventsRes.events) setEvents(eventsRes.events);\n  } // Get artist details when page loads\n\n\n  useEffect(() => {\n    console.log('RUNNING getDetails for artist:', artistId);\n    getArtistDetails();\n    getCityDetails();\n    console.log('*********CITY:', city);\n    getEvents();\n  }, []); // useEffect(() => {\n  //     // Get city details when page loads\n  //     console.log('RUNNING getDetails for city:', cityId)\n  //     getCityDetails();\n  // }, [])\n  // useEffect(() => {\n  //     // Get events for this artist with radius of this city\n  //     console.log('RUNNING getEvents')\n  //     getEvents();\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EventList container p-0 border border-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.image,\n          alt: \"artist\",\n          className: \"img-fluid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventList-title col-10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"fs-2\",\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: events.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Venue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: events.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(e.datetime).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venueCity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venueState\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), currUser && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this)]\n              }, e.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-5\",\n          children: \"NO EVENTS AT THIS TIME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventList, \"BZE6SNA5A1ouV9qZHZ1i87iVmgc=\");\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js"],"names":["React","useState","useEffect","useContext","ArtistTrackerApi","Button","userContext","EventList","artistId","cityId","radius","events","setEvents","city","setCity","artist","setArtist","currUser","getArtistDetails","artistRes","getArtistById","getCityDetails","cityRes","getCityById","console","log","getEvents","eventsRes","getEventsForArtist","latitude","longitude","image","name","length","map","e","Date","datetime","toLocaleDateString","venue","venueCity","venueState","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\nimport userContext from './userContext';\n\n/** Renders a list of events in table format for an artist.\n * \n *  If user is logged in, shows button to save an event to their account.\n */\n\nfunction EventList( {artistId, cityId, radius} ) {\n    const [events, setEvents] = useState([]);\n    const [city, setCity] = useState({});\n    const [artist, setArtist] = useState({});\n    const {currUser} = useContext(userContext);\n\n    async function getArtistDetails() {\n        const artistRes = await ArtistTrackerApi.getArtistById(artistId);\n        setArtist(artistRes.artist);\n    }\n\n    async function getCityDetails() {\n        const cityRes = await ArtistTrackerApi.getCityById(cityId)\n        setCity(cityRes.city);\n        console.log('CITY AFTER SETTING:', city)\n    }\n\n    async function getEvents() {\n        const eventsRes = await ArtistTrackerApi.getEventsForArtist(\n            artistId, city.latitude, city.longitude, radius)\n        if (eventsRes.events) setEvents(eventsRes.events);\n    }\n\n    // Get artist details when page loads\n    useEffect(() => {\n\n        console.log('RUNNING getDetails for artist:', artistId)\n        getArtistDetails();\n        getCityDetails();\n        console.log('*********CITY:', city)\n        getEvents();\n    }, [])\n\n    // useEffect(() => {\n    //     // Get city details when page loads\n\n    //     console.log('RUNNING getDetails for city:', cityId)\n    //     getCityDetails();\n        \n\n    // }, [])\n\n    // useEffect(() => {\n    //     // Get events for this artist with radius of this city\n\n    //     console.log('RUNNING getEvents')\n    //     getEvents();\n    // }, [])\n\n\n\n    return(\n        <div className=\"EventList container p-0 border border-light\">\n            <div className=\"row align-items-center\">\n                <div className=\"col-2\">\n                    <img src={artist.image} alt='artist' className='img-fluid'/>\n                </div>\n                <div className='EventList-title col-10'>\n                    <div className='row'>\n                        <p className=\"fs-2\">{artist.name}</p>\n                    </div>\n                </div>\n                <div className='row'>\n                    {(events.length)\n                    ?\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Venue</th>\n                                <th>City</th>\n                                <th>State</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {events.map(e => {\n                                    return (<tr key={e.id}>\n                                        <td>{new Date(e.datetime).toLocaleDateString()}</td>\n                                        <td>{e.venue}</td>\n                                        <td>{e.venueCity}</td>\n                                        <td>{e.venueState}</td>\n                                        {currUser &&\n                                        <td><Button size=\"sm\">Save</Button></td>\n                                        }\n                                        </tr>)\n                                })\n                            }     \n                        </tbody>\n                    </table>\n                    :\n                    <div className='p-5'>NO EVENTS AT THIS TIME</div>\n                }\n                </div>    \n            </div>\n        </div>\n    )\n}\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}