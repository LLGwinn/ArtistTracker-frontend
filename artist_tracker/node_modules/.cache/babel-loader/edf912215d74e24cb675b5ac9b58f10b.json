{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n/** API Class.\n *\n * Static class connects methods used to get/send to to the API.\n * \n */\n\nclass ArtistTrackerApi {\n  // token for interaction with the API is stored here.\n  static async request(endpoint) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"get\";\n    //console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${ArtistTrackerApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      const message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  } // Individual API routes\n\n  /** Get details on a company by handle. */\n  //   static async getCompany(handle) {\n  //     try {\n  //       const res = await this.request(`companies/${handle}`);\n  //       return res.company;\n  //     } catch(err) {\n  //       console.log(err)\n  //     }\n  //   }\n  //   /** Get list of all companies */\n  //   static async getAllCompanies(name) {\n  //     try {\n  //       const query = name !== \"\" ? `/?name=${name}`:\"\";\n  //       const res = await this.request(`companies${query}`);\n  //       return res.companies;\n  //     } catch(err) {\n  //       console.log(err)\n  //     }\n  //   }\n  //   /** Get list of all jobs */\n  //   static async getAllJobs(title) {\n  //     try {\n  //       const query = title !== \"\" ? `/?title=${title}`:\"\";\n  //       const res = await this.request(`jobs${query}`);\n  //       return res.jobs;\n  //     } catch(err) {\n  //       console.log(err)\n  //     }\n  //   }\n\n  /** Get details on a user by username. */\n\n\n  static async getUser(id) {\n    console.log('ID in the API call:', id);\n\n    try {\n      const res = await this.request(`users/${id}`);\n      return res.user;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  /** Update user profile. */\n\n\n  static async updateUser(id, username, firstName, lastName, email, password) {\n    try {\n      const updateData = {\n        username,\n        firstName,\n        lastName,\n        email,\n        password\n      };\n      const res = await this.request(`users/${id}`, updateData, 'patch');\n      return res.user;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  /** Authenticate username/password and return token */\n\n\n  static async authenticateUser(username, password) {\n    try {\n      const res = await this.request('auth/token', {\n        username,\n        password\n      }, 'post');\n      ArtistTrackerApi.token = res.token;\n      return res.token;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  /** Register new user and return token */\n\n\n  static async registerUser(user) {\n    try {\n      const {\n        username,\n        password,\n        firstName,\n        email,\n        city,\n        distancePref\n      } = user;\n      const res = await this.request('auth/register', {\n        username,\n        password,\n        firstName,\n        email,\n        city,\n        distancePref\n      }, 'post');\n      ArtistTrackerApi.token = res.token;\n      return {\n        token: res.token,\n        id: res.id\n      };\n    } catch (err) {\n      console.log(err);\n    }\n  } // /** Apply to job */\n  // static async applyToJob(username, id, token) {\n  //   try {\n  //     JoblyApi.token = token;\n  //     const res = await this.request(`users/${username}/jobs/${id}`, {}, 'post');\n  //     console.log(res)\n  //     return res;\n  //   } catch(err) {\n  //     console.log(err)\n  //   }\n  // }\n\n\n} // for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//     \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//     \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\n\nexport default ArtistTrackerApi;","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/api.js"],"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","ArtistTrackerApi","request","endpoint","data","method","url","headers","Authorization","token","params","err","console","error","response","message","Array","isArray","getUser","id","log","res","user","updateUser","username","firstName","lastName","email","password","updateData","authenticateUser","registerUser","city","distancePref"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class connects methods used to get/send to to the API.\n * \n */\n\nclass ArtistTrackerApi {\n  // token for interaction with the API is stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    //console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${ArtistTrackerApi.token}` };\n    const params = (method === \"get\") ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      const message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n//   static async getCompany(handle) {\n//     try {\n//       const res = await this.request(`companies/${handle}`);\n//       return res.company;\n//     } catch(err) {\n//       console.log(err)\n//     }\n//   }\n\n//   /** Get list of all companies */\n\n//   static async getAllCompanies(name) {\n//     try {\n//       const query = name !== \"\" ? `/?name=${name}`:\"\";\n//       const res = await this.request(`companies${query}`);\n//       return res.companies;\n//     } catch(err) {\n//       console.log(err)\n//     }\n//   }\n\n//   /** Get list of all jobs */\n  \n//   static async getAllJobs(title) {\n//     try {\n//       const query = title !== \"\" ? `/?title=${title}`:\"\";\n//       const res = await this.request(`jobs${query}`);\n//       return res.jobs;\n//     } catch(err) {\n//       console.log(err)\n//     }\n//   }\n\n    /** Get details on a user by username. */\n\n    static async getUser(id) {\n        console.log('ID in the API call:', id)\n      try {\n        const res = await this.request(`users/${id}`);\n        return res.user;\n      } catch(err) {\n        console.log(err)\n      }\n    }\n\n    /** Update user profile. */\n\n    static async updateUser(id, username, firstName, lastName, email, password) {\n      try {\n        const updateData = {username, firstName, lastName, email, password}\n        const res = await this.request(`users/${id}`, \n                    updateData, 'patch');\n        return res.user;\n      } catch(err) {\n        console.log(err)\n      }\n    }\n\n    /** Authenticate username/password and return token */\n\n    static async authenticateUser(username, password) {\n      try {\n        const res = await this.request('auth/token', {username, password}, 'post');\n        ArtistTrackerApi.token = res.token;\n        return res.token;\n      } catch(err) {\n        console.log(err)\n      }\n    }\n\n    /** Register new user and return token */\n\n    static async registerUser(user) {\n      try {\n        const {username, password, firstName, email, city, distancePref} = user;\n        const res = await this.request('auth/register', \n                            {username, password, firstName, email, city, distancePref}, 'post');\n        ArtistTrackerApi.token = res.token;\n        return {token: res.token, id: res.id};\n      } catch(err) {\n        console.log(err)\n      }\n    }\n\n    // /** Apply to job */\n\n    // static async applyToJob(username, id, token) {\n    //   try {\n    //     JoblyApi.token = token;\n    //     const res = await this.request(`users/${username}/jobs/${id}`, {}, 'post');\n    //     console.log(res)\n    //     return res;\n    //   } catch(err) {\n    //     console.log(err)\n    //   }\n    // }\n\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//     \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//     \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\nexport default ArtistTrackerApi;"]},"metadata":{},"sourceType":"module"}