{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/AddArtistForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ArtistTrackerApi from './api';\nimport AuthContext from './authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _ = require('lodash');\n\nconst {\n  debounce\n} = _;\n\nfunction AddArtistForm() {\n  _s();\n\n  const [artistSearch, setArtistSearch] = useState(\"\");\n  const [autocompleteArtists, setAutocompleteArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState({\n    name: \"\"\n  });\n  const [artistOptionsDisplay, setArtistOptionsDisplay] = useState(false);\n  const {\n    currUser\n  } = useContext(AuthContext);\n  const debounceLoadArtists = useCallback(debounce(str => fetchArtists(str), 800), []);\n\n  async function fetchArtists(str) {\n    try {\n      const res = await ArtistTrackerApi.getArtistsForAutocomplete(str);\n      setAutocompleteArtists(res.artist);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function updateUserArtists(selectedArtist) {\n    try {\n      console.log(selectedArtist.id, selectedArtist.name, currUser.id);\n      const res = await ArtistTrackerApi.addArtistToUser(selectedArtist.id, selectedArtist.name, currUser.id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const artistSearchChange = evt => {\n    setArtistSearch(evt.target.value);\n\n    if (artistSearch && artistSearch.length >= 3) {\n      debounceLoadArtists(artistSearch);\n    }\n  };\n\n  const setArtistSelection = artistSelection => {\n    setArtistSearch(artistSelection.name);\n    setSelectedArtist(artistSelection);\n    console.log('after setSelectedArtist', selectedArtist);\n    setArtistOptionsDisplay(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"display-5\",\n        children: \"Add an artist to your account:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Artist name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"artistSearch\",\n          type: \"text\",\n          name: \"selectedArtist\",\n          onClick: () => setArtistOptionsDisplay(!artistOptionsDisplay),\n          onChange: artistSearchChange,\n          value: artistSearch,\n          className: \"artistSearch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), artistOptionsDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocompleteContainer ps-3 mt-1\",\n          children: autocompleteArtists.map(artist => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocompleteOption\",\n              onClick: () => setArtistSelection(artist),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this)\n            }, artist.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        className: \"mt-3\",\n        onClick: updateUserArtists,\n        children: \"Add this artist to my favorites!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddArtistForm, \"lr3lMgEQi1QkQBB5IYz9dwAkEFQ=\");\n\n_c = AddArtistForm;\nexport default AddArtistForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddArtistForm\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/AddArtistForm.js"],"names":["React","useState","useCallback","useContext","Form","Button","ArtistTrackerApi","AuthContext","_","require","debounce","AddArtistForm","artistSearch","setArtistSearch","autocompleteArtists","setAutocompleteArtists","selectedArtist","setSelectedArtist","name","artistOptionsDisplay","setArtistOptionsDisplay","currUser","debounceLoadArtists","str","fetchArtists","res","getArtistsForAutocomplete","artist","err","console","log","updateUserArtists","id","addArtistToUser","artistSearchChange","evt","target","value","length","setArtistSelection","artistSelection","map"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useContext} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ArtistTrackerApi from './api';\nimport AuthContext from './authContext';\n\nconst _ = require('lodash');\nconst {debounce} = _;\n\nfunction AddArtistForm() {\n    const [artistSearch, setArtistSearch] = useState(\"\");\n    const [autocompleteArtists, setAutocompleteArtists] = useState([]);\n    const [selectedArtist, setSelectedArtist] = useState({name:\"\"});\n    const [artistOptionsDisplay, setArtistOptionsDisplay] = useState(false);\n    const {currUser} = useContext(AuthContext);\n\n    const debounceLoadArtists = useCallback(\n        debounce(str => fetchArtists(str), 800), []);\n\n    async function fetchArtists(str) {\n        try {\n            const res = await ArtistTrackerApi.getArtistsForAutocomplete(str);\n            setAutocompleteArtists(res.artist);\n        } catch(err) {\n            console.log(err);\n        }  \n    }\n\n    async function updateUserArtists(selectedArtist) {\n        try {\n            console.log(selectedArtist.id, selectedArtist.name, currUser.id)\n            const res = await ArtistTrackerApi.addArtistToUser(\n                selectedArtist.id, selectedArtist.name, currUser.id);\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    const artistSearchChange = evt => {\n        setArtistSearch(evt.target.value);\n        if(artistSearch && artistSearch.length >= 3){\n            debounceLoadArtists(artistSearch);\n        }\n    }\n\n    const setArtistSelection = (artistSelection) => {\n        setArtistSearch(artistSelection.name);\n        setSelectedArtist(artistSelection);\n        console.log('after setSelectedArtist', selectedArtist)\n        setArtistOptionsDisplay(false);\n    }\n\n    return (\n        <div className='container-fluid'>\n            <div>\n                <p className=\"display-5\">Add an artist to your account:</p>\n            </div>\n            <Form>\n                <Form.Group>\n                    <Form.Label>Artist name:</Form.Label>\n                    <Form.Control id='artistSearch' \n                                  type='text' \n                                  name='selectedArtist' \n                                  onClick={() => setArtistOptionsDisplay(!artistOptionsDisplay)}\n                                  onChange={artistSearchChange} \n                                  value={artistSearch} \n                                  className='artistSearch'/>\n                    {artistOptionsDisplay && (\n                        <div className='autocompleteContainer ps-3 mt-1'>\n                            {autocompleteArtists.map(artist => {\n                                return (\n                                    <div className='autocompleteOption' \n                                        key={artist.id} \n                                        onClick={() => setArtistSelection(artist)}>\n                                        <span>{artist.name}</span>\n                                    </div>\n                                )\n                            })}\n\n                        </div>\n                    )}\n                </Form.Group>\n                <Button variant='success'\n                        className='mt-3'\n                        onClick={updateUserArtists}>Add this artist to my favorites!</Button>\n            </Form>\n        </div>\n    )\n\n}\n\nexport default AddArtistForm;"]},"metadata":{},"sourceType":"module"}