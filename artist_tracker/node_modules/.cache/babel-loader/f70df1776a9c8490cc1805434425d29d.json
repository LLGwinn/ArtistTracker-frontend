{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\nimport userContext from './userContext';\nimport { Navigate } from 'react-router-dom';\n/** Renders a list of events in table format for an artist.\n * \n *  If user is logged in, shows button to save an event to their account.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventList(_ref) {\n  _s();\n\n  let {\n    artistDetails,\n    cityInfo,\n    radius\n  } = _ref;\n  const [events, setEvents] = useState([]);\n  const {\n    currUser\n  } = useContext(userContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (artistDetails && cityInfo.latitude) getEvents();\n  }, [cityInfo]);\n\n  async function getEvents() {\n    try {\n      const eventsRes = await ArtistTrackerApi.getEventsForArtist(artistDetails.id, cityInfo.latitude, cityInfo.longitude, radius);\n      if (eventsRes) setEvents(eventsRes.events);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function saveEvent(e) {\n    try {\n      const res = await ArtistTrackerApi.addEventToUser(e, currUser.id);\n      alert(res);\n      navigate(`/events/${currUser.id}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EventList container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid\",\n          src: artistDetails.image,\n          alt: \"artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title text-dark h1\",\n          children: artistDetails.homepage !== '' ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: artistDetails.homepage,\n            target: \"_blank\",\n            children: artistDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 31\n          }, this) : artistDetails.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), events.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Venue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: events.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(e.datetime).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venueCity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: e.venueState\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this), currUser && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    onClick: () => saveEvent(e),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    onClick: () => window.open(e.url, '_blank'),\n                    children: \"Tickets\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)]\n              }, e.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-dark\",\n          children: \"NO EVENTS WITHIN SEARCH RADIUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventList, \"wiXqPNo2RTcpBoNeMNDnIHaVS24=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js"],"names":["React","useState","useEffect","useContext","useNavigate","ArtistTrackerApi","Button","userContext","Navigate","EventList","artistDetails","cityInfo","radius","events","setEvents","currUser","navigate","latitude","getEvents","eventsRes","getEventsForArtist","id","longitude","err","console","log","saveEvent","e","res","addEventToUser","alert","image","homepage","name","length","map","Date","datetime","toLocaleDateString","venue","venueCity","venueState","window","open","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\nimport userContext from './userContext';\nimport { Navigate } from 'react-router-dom';\n\n/** Renders a list of events in table format for an artist.\n * \n *  If user is logged in, shows button to save an event to their account.\n */\n\nfunction EventList( {artistDetails, cityInfo, radius} ) {\n    const [events, setEvents] = useState([]);\n    const {currUser} = useContext(userContext);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (artistDetails && cityInfo.latitude) getEvents();\n    }, [cityInfo])\n\n    async function getEvents() {\n        try {\n            const eventsRes = await ArtistTrackerApi.getEventsForArtist(\n                artistDetails.id, cityInfo.latitude, cityInfo.longitude, radius)\n            if (eventsRes) setEvents(eventsRes.events);\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    async function saveEvent(e) {\n        try {\n            const res = await ArtistTrackerApi.addEventToUser(e, currUser.id);\n            alert(res);\n            navigate(`/events/${currUser.id}`);\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    return(\n        <div className=\"EventList container\">\n            <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                    <img className=\"img-fluid\" src={artistDetails.image} alt=\"artist\" />\n                    <h5 className=\"card-title text-dark h1\">\n                        {(artistDetails.homepage !== '')\n                            ? <a href={artistDetails.homepage} target=\"_blank\">{artistDetails.name}</a>\n                            : artistDetails.name\n                        }\n                    </h5>\n                        \n                    {(events.length)\n                    ? <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Venue</th>\n                                <th>City</th>\n                                <th>State</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {events.map(e => {\n                            return (<tr key={e.id}>\n                                        <td>{new Date(e.datetime).toLocaleDateString()}</td>\n                                        <td>{e.venue}</td>\n                                        <td>{e.venueCity}</td>\n                                        <td>{e.venueState}</td>\n                                        {currUser &&\n                                            <td><Button size=\"sm\" onClick={() => saveEvent(e)}>Save</Button></td>\n                                        }\n                                        <td><Button size=\"sm\" \n                                                onClick={() => window.open(e.url,'_blank')}>Tickets</Button></td>\n                                    </tr>)\n                        })\n                        }     \n                        </tbody>\n                    </table>\n                    :\n                    <div className='text-dark'>NO EVENTS WITHIN SEARCH RADIUS</div>\n                    }\n                </div>\n                {/* end card body */}\n            </div>\n            {/* end card */}\n        </div> \n    )\n}\n\nexport default EventList;\n\n"]},"metadata":{},"sourceType":"module"}