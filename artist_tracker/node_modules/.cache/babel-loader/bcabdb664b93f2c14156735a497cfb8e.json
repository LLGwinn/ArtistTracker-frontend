{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport userContext from './userContext';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport UnauthorizedMessage from './UnauthorizedMessage';\nimport ArtistTrackerApi from './api';\nimport './Profile.css';\nimport ArtistItem from './ArtistItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _ = require('lodash');\n\nconst {\n  debounce\n} = _;\n\nfunction Profile() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    currUser,\n    setCurrUser,\n    token,\n    usersSavedArtists\n  } = useContext(userContext);\n  const [artists, setArtists] = useState([]);\n  const [formData, setFormData] = useState({\n    username: currUser.username,\n    firstName: currUser.firstName,\n    email: currUser.email,\n    city: currUser.city,\n    distancePref: currUser.distance,\n    password: ''\n  });\n  const navigate = useNavigate();\n  const [citySearch, setCitySearch] = useState(\"\");\n  const [autocompleteCities, setAutocompleteCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState({\n    id: \"\",\n    name: \"\",\n    region: \"\"\n  });\n  const [cityOptionsDisplay, setCityOptionsDisplay] = useState(false);\n  const debounceLoadCities = useCallback(debounce(str => fetchCities(str), 1000), []);\n\n  async function fetchCities(str) {\n    try {\n      const res = await ArtistTrackerApi.getCitiesForAutocomplete(str);\n      setAutocompleteCities(res.cities);\n    } catch (err) {\n      console.log(err);\n    }\n  } // change handler for city input\n\n\n  const citySearchChange = evt => {\n    setCitySearch(evt.target.value);\n\n    if (citySearch && citySearch.length >= 3) {\n      debounceLoadCities(citySearch);\n    }\n  }; // runs when user selects a city from autocomplete\n\n\n  const setCitySelection = citySelection => {\n    setCitySearch(`${citySelection.name}, ${citySelection.region}`);\n    setSelectedCity(citySelection);\n    setCityOptionsDisplay(false);\n  }; // get user's saved artists when page loads\n\n\n  useEffect(() => {\n    setArtists(usersSavedArtists);\n  }, [usersSavedArtists]); // get user's current city name, state when page loads (to show in form)\n\n  useEffect(() => {\n    async function getUserCityName() {\n      const res = await ArtistTrackerApi.getCityById(currUser.city);\n      console.log('RES?', res);\n      setCitySearch(`${res.city.name}, ${res.city.region}`);\n      console.log('citySearch', citySearch);\n    }\n\n    getUserCityName();\n  }, [currUser]);\n\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => {\n      return { ...data,\n        [name]: value\n      };\n    });\n  }\n\n  async function handleUpdate(evt) {\n    try {\n      evt.preventDefault();\n      const user = {\n        id,\n        username: formData.username,\n        firstName: formData.firstName,\n        email: formData.email,\n        city: formData.city,\n        distancePref: formData.distancePref\n      };\n      if (formData.password !== '') user.password = formData.password;\n      const updatedUser = await ArtistTrackerApi.updateUser(user, token);\n      setCurrUser(updatedUser);\n      navigate('/');\n      alert(`User updated successfully.`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (!token) return /*#__PURE__*/_jsxDEV(UnauthorizedMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row py-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"display-5\",\n        children: [\"Profile for: \", currUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        className: \"Profile row mb-3 py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-5 p-4 border border-primary\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mb-3\",\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 4,\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"username\",\n                value: formData.username,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mb-3\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 4,\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                name: \"password\",\n                value: formData.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mb-3\",\n            controlId: \"firstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 4,\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"firstName\",\n                value: formData.firstName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mb-3\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 4,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                name: \"email\",\n                value: formData.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 4,\n              children: \"City:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                id: \"citySearch\",\n                type: \"text\",\n                name: \"selectedCity\",\n                onClick: () => setCityOptionsDisplay(!cityOptionsDisplay),\n                onChange: citySearchChange,\n                value: citySearch,\n                className: \"citySearch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), cityOptionsDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"autocompleteContainer ps-3 mt-1\",\n                children: autocompleteCities.map(city => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"autocompleteOption\",\n                    onClick: () => setCitySelection(city),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [city.name, \", \", city.region]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 53\n                    }, this)\n                  }, city.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mb-3 align-items-center\",\n            controlId: \"distancePref\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 4,\n              children: \"Event search radius (miles)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                name: \"distancePref\",\n                value: formData.distancePref,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-5 ms-5 p-4 justify-content-center border border-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: artists.length ? artists.map(a => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(ArtistItem, {\n                artistId: a.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 59\n              }, this)\n            }, a.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 44\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"NO ARTISTS SAVED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onChange: handleChange,\n        onClick: handleUpdate,\n        children: \"Save changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        href: \"/\",\n        className: \"ms-4\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"VHHBJUeA22Ex2FK08J5NA5HNbAI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/Profile.js"],"names":["React","useState","useContext","useEffect","useCallback","useNavigate","useParams","userContext","Form","Row","Col","Button","UnauthorizedMessage","ArtistTrackerApi","ArtistItem","_","require","debounce","Profile","id","currUser","setCurrUser","token","usersSavedArtists","artists","setArtists","formData","setFormData","username","firstName","email","city","distancePref","distance","password","navigate","citySearch","setCitySearch","autocompleteCities","setAutocompleteCities","selectedCity","setSelectedCity","name","region","cityOptionsDisplay","setCityOptionsDisplay","debounceLoadCities","str","fetchCities","res","getCitiesForAutocomplete","cities","err","console","log","citySearchChange","evt","target","value","length","setCitySelection","citySelection","getUserCityName","getCityById","handleChange","data","handleUpdate","preventDefault","user","updatedUser","updateUser","alert","map","a"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback} from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport userContext from './userContext';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport UnauthorizedMessage from './UnauthorizedMessage';\nimport ArtistTrackerApi from './api';\nimport './Profile.css';\nimport ArtistItem from './ArtistItem';\nconst _ = require('lodash');\nconst {debounce} = _;\n\n\nfunction Profile() {  \n    const {id} = useParams();\n    const {currUser, setCurrUser, token, usersSavedArtists} = useContext(userContext);\n    const [artists, setArtists] = useState([]);\n    const [formData, setFormData] = useState(\n                {username: currUser.username, firstName: currUser.firstName, \n                email: currUser.email, city: currUser.city, \n                distancePref: currUser.distance, password: ''}\n    );\n    const navigate = useNavigate();\n\n    const [citySearch, setCitySearch] = useState(\"\");\n    const [autocompleteCities, setAutocompleteCities] = useState([]);\n    const [selectedCity, setSelectedCity] = useState({id:\"\", name:\"\", region:\"\"});\n    const [cityOptionsDisplay, setCityOptionsDisplay] = useState(false);\n\n    const debounceLoadCities = useCallback(\n        debounce(str => fetchCities(str), 1000), []);\n\n    async function fetchCities(str) {\n        try {\n            const res = await ArtistTrackerApi.getCitiesForAutocomplete(str);\n            setAutocompleteCities(res.cities);\n        } catch(err) {\n            console.log(err);\n        }  \n    }\n\n    // change handler for city input\n    const citySearchChange = evt => {\n        setCitySearch(evt.target.value);\n        if(citySearch && citySearch.length >= 3){\n            debounceLoadCities(citySearch);\n        }\n    }\n\n    // runs when user selects a city from autocomplete\n    const setCitySelection = (citySelection) => {\n        setCitySearch(`${citySelection.name}, ${citySelection.region}`);\n        setSelectedCity(citySelection);\n        setCityOptionsDisplay(false);\n    }\n\n    // get user's saved artists when page loads\n    useEffect(() => {\n        setArtists(usersSavedArtists);\n    }, [usersSavedArtists])\n\n    // get user's current city name, state when page loads (to show in form)\n    useEffect(() => {\n        async function getUserCityName() {\n            const res = await ArtistTrackerApi.getCityById(currUser.city);\n            console.log('RES?', res)\n            setCitySearch(`${res.city.name}, ${res.city.region}`); \n            console.log('citySearch', citySearch)\n        }\n        getUserCityName();\n    }, [currUser])\n\n    function handleChange(evt) {\n        const {name, value} = evt.target;\n        setFormData(data => { \n            return {...data, [name]: value}\n        });\n    }\n\n    async function handleUpdate(evt) {\n        try {\n            evt.preventDefault();\n            const user = {id,\n                username: formData.username, \n                firstName: formData.firstName, \n                email: formData.email, \n                city: formData.city, \n                distancePref: formData.distancePref}\n            if (formData.password !== '') user.password = formData.password;\n\n          const updatedUser = await ArtistTrackerApi.updateUser(user, token);\n          setCurrUser(updatedUser);\n          navigate('/');\n          alert(`User updated successfully.`)\n        } catch(err) {\n          console.log(err);\n        }\n      }\n\n    \n    if (!token) return <UnauthorizedMessage />;\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row py-2\">\n                <p className='display-5'>Profile for: {currUser.username}</p>\n            </div>\n            <div >\n                <Form className=\"Profile row mb-3 py-4\">\n                <div className=\"col-5 p-4 border border-primary\">\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"username\">\n                        <Form.Label column sm={4}>Username</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"text\"\n                                        name=\"username\" \n                                        value={formData.username}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"password\">\n                        <Form.Label column sm={4}>Password</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"password\"\n                                        name=\"password\" \n                                        value={formData.password}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"firstName\">\n                        <Form.Label column sm={4}>First Name</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"text\"\n                                        name=\"firstName\" \n                                        value={formData.firstName}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"email\">\n                        <Form.Label column sm={4}>Email</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"email\"\n                                        name=\"email\" \n                                        value={formData.email}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                    {/* <Form.Group as={Row} className=\"mb-3\" controlId=\"city\">\n                        <Form.Label column sm={4}>City</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"text\"\n                                        name=\"city\" \n                                        value={formData.city} //ADD ALL THE AUTOCOMPLETE STUFF EHRE\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group> */}\n                    <Form.Group as={Row} className=\"mb-3\">\n                            <Form.Label column sm={4}>City:</Form.Label>\n                            <Col sm={8}>\n                                <Form.Control id='citySearch' \n                                            type='text' \n                                            name='selectedCity' \n                                            onClick={() => setCityOptionsDisplay(!cityOptionsDisplay)}\n                                            onChange={citySearchChange} \n                                            value={citySearch}\n                                            className='citySearch'/>\n                                {cityOptionsDisplay && (\n                                    <div className='autocompleteContainer ps-3 mt-1'>\n                                        {autocompleteCities.map(city => {\n                                            return (\n                                                <div className='autocompleteOption' \n                                                    key={city.id} \n                                                    onClick={() => setCitySelection(city)}>\n                                                    <span>{city.name}, {city.region}</span>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                )}\n                            </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3 align-items-center\" controlId=\"distancePref\">\n                        <Form.Label column sm={4}>Event search radius (miles)</Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"number\"\n                                        name=\"distancePref\" \n                                        value={formData.distancePref}\n                                        onChange={handleChange} />\n                        </Col>\n                    </Form.Group>\n                </div>\n                <div className=\"col-5 ms-5 p-4 justify-content-center border border-primary\">\n                        <ul>\n                        {(artists.length)\n                        ? artists.map(a => <li key={a.id}><ArtistItem artistId={a.id} /></li>)\n                        : <p>NO ARTISTS SAVED</p>\n                        }\n                        </ul>\n                </div>\n                </Form>\n                <Button type=\"submit\" onChange={handleChange} onClick={handleUpdate}>\n                    Save changes\n                </Button>\n                <Button variant=\"outline-primary\" href=\"/\" className=\"ms-4\">Cancel</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}