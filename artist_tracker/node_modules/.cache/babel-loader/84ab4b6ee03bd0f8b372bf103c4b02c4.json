{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/SavedEvents.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport userContext from './userContext';\nimport UnauthorizedMessage from './UnauthorizedMessage';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SavedEvents() {\n  _s();\n\n  const {\n    currUser,\n    token\n  } = useContext(userContext);\n  const [userEvents, setUserEvents] = useState([]);\n  useEffect(() => {\n    async function getSavedEvents() {\n      const res = await ArtistTrackerApi.getEventsForUser(currUser.id);\n      setUserEvents(res.events);\n    }\n\n    getSavedEvents();\n  }, []);\n\n  const remove = async e => {\n    const message = await ArtistTrackerApi.removeEventFromUser(currUser.id, e.id, token);\n    alert(message.deleteMessage);\n    const res = await ArtistTrackerApi.getEventsForUser(currUser.id);\n    setUserEvents(res.events);\n  };\n\n  if (!token) return /*#__PURE__*/_jsxDEV(UnauthorizedMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 24\n  }, this);\n  if (!userEvents) return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"sr-only\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-6 mt-4 mb-5\",\n      children: \"Your Saved Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), userEvents.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table text-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Venue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userEvents.map(e => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.artist_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(e.event_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.venue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.venue_city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.venue_state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), currUser && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                variant: \"dark\",\n                onClick: () => window.open(e.event_url, '_blank'),\n                children: \"Tickets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ArtistItem-button mt-1\",\n                onClick: () => remove(e),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)]\n          }, e.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NO SAVED EVENTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"dark\",\n      href: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SavedEvents, \"JyQhH7oArIwfL1BKc0ibuRGsp4k=\");\n\n_c = SavedEvents;\nexport default SavedEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedEvents\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/SavedEvents.js"],"names":["React","useContext","useEffect","useState","userContext","UnauthorizedMessage","ArtistTrackerApi","Button","SavedEvents","currUser","token","userEvents","setUserEvents","getSavedEvents","res","getEventsForUser","id","events","remove","e","message","removeEventFromUser","alert","deleteMessage","length","map","artist_name","Date","event_date","toLocaleDateString","venue","venue_city","venue_state","window","open","event_url"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport userContext from './userContext';\nimport UnauthorizedMessage from './UnauthorizedMessage';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\n\nfunction SavedEvents() {\n    const {currUser, token} = useContext(userContext);\n    const [userEvents, setUserEvents] = useState([]);\n\n    useEffect(() => {\n        async function getSavedEvents() {\n            const res = await ArtistTrackerApi.getEventsForUser(currUser.id);\n            setUserEvents(res.events);\n        }\n        getSavedEvents();\n    }, [])\n\n    const remove = async (e) => {\n        const message = await ArtistTrackerApi.removeEventFromUser(currUser.id, e.id, token);\n        alert(message.deleteMessage);\n        const res = await ArtistTrackerApi.getEventsForUser(currUser.id);\n        setUserEvents(res.events);\n    }\n\n    if (!token) return <UnauthorizedMessage />;\n    if (!userEvents) return (\n        <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n        </div>\n    )\n    return (\n        <div>\n            <p className=\"display-6 mt-4 mb-5\">Your Saved Events</p>\n            {(userEvents.length)\n                ? <table className='table text-light'>\n                    <thead>\n                        <tr className=\"text-dark\">\n                            <th>Artist</th>\n                            <th>Date</th>\n                            <th>Venue</th>\n                            <th>City</th>\n                            <th>State</th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {userEvents.map(e => {\n                        return (<tr key={e.id}>\n                                    <td>{e.artist_name}</td>\n                                    <td>{new Date(e.event_date).toLocaleDateString()}</td>\n                                    <td>{e.venue}</td>\n                                    <td>{e.venue_city}</td>\n                                    <td>{e.venue_state}</td>\n                                    {currUser &&\n                                        <td><Button size=\"sm\" variant=\"dark\" \n                                                onClick={() => window.open(e.event_url,'_blank')}>Tickets</Button></td>\n                                    }\n                                    <td><button className=\"ArtistItem-button mt-1\" onClick={() => remove(e)}>X</button></td>\n                                </tr>)\n                    })\n                    }     \n                    </tbody>\n                </table>\n                : <p>NO SAVED EVENTS</p>\n            }\n            <Button variant=\"dark\" href=\"/\">Home</Button>\n        </div>\n    )\n}\n\nexport default SavedEvents;"]},"metadata":{},"sourceType":"module"}