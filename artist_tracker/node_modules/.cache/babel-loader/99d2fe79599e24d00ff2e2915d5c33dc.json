{"ast":null,"code":"var _jsxFileName = \"/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\nimport userContext from './userContext';\n/** Renders a list of events in table format for an artist.\n * \n *  If user is logged in, shows button to save an event to their account.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EventList(_ref) {\n  _s();\n\n  let {\n    artistId,\n    cityId,\n    radius\n  } = _ref;\n  const [events, setEvents] = useState([]);\n  const [city, setCity] = useState({});\n  const [artist, setArtist] = useState({});\n  const {\n    currUser\n  } = useContext(userContext);\n  console.log('ARTIST', artistId, 'CITY', cityId, 'RADIUS', radius);\n  useEffect(() => {\n    // Get city details, artist details, and events page render\n    async function getDetails(artistId, cityId, radius) {\n      const cityRes = await ArtistTrackerApi.getCityById(cityId);\n      console.log(cityRes);\n      const artistRes = await ArtistTrackerApi.getArtistById(artistId);\n      console.log(artistRes); // const eventsRes = await ArtistTrackerApi.getEventsForArtist(\n      //     artistId, cityLat, cityLong, radius)\n      // if (res.events) setEvents(res.events);\n    }\n\n    getDetails(artistId, cityId, radius); // if (artist) {\n    //     getArtistEvents(artist.id, cityInfo.latitude, cityInfo.longitude, radius);\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventList container p-0 border border-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: artist.image,\n            alt: \"artist\",\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"EventList-title col-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fs-2\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: events.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Venue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: events.map(e => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(e.datetime).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venueCity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: e.venueState\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 45\n                  }, this), currUser && /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"sm\",\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 45\n                  }, this)]\n                }, e.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-5\",\n            children: \"NO EVENTS AT THIS TIME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(EventList, \"BZE6SNA5A1ouV9qZHZ1i87iVmgc=\");\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/ells/Bootcamp/Capstone-2/frontend/artist_tracker/src/EventList.js"],"names":["React","useState","useEffect","useContext","ArtistTrackerApi","Button","userContext","EventList","artistId","cityId","radius","events","setEvents","city","setCity","artist","setArtist","currUser","console","log","getDetails","cityRes","getCityById","artistRes","getArtistById","image","name","length","map","e","Date","datetime","toLocaleDateString","venue","venueCity","venueState","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport ArtistTrackerApi from './api';\nimport Button from 'react-bootstrap/Button';\nimport \"./EventList.css\";\nimport userContext from './userContext';\n\n/** Renders a list of events in table format for an artist.\n * \n *  If user is logged in, shows button to save an event to their account.\n */\n\nfunction EventList( {artistId, cityId, radius} ) {\n    const [events, setEvents] = useState([]);\n    const [city, setCity] = useState({});\n    const [artist, setArtist] = useState({});\n    const {currUser} = useContext(userContext);\n    console.log('ARTIST', artistId, 'CITY', cityId, 'RADIUS', radius)\n    useEffect(() => {\n        // Get city details, artist details, and events page render\n        async function getDetails(artistId, cityId, radius) {\n            const cityRes = await ArtistTrackerApi.getCityById(cityId);\n            console.log(cityRes);\n            const artistRes = await ArtistTrackerApi.getArtistById(artistId);\n            console.log(artistRes)\n            // const eventsRes = await ArtistTrackerApi.getEventsForArtist(\n            //     artistId, cityLat, cityLong, radius)\n            // if (res.events) setEvents(res.events);\n        }\n        getDetails(artistId, cityId, radius);\n\n        // if (artist) {\n        //     getArtistEvents(artist.id, cityInfo.latitude, cityInfo.longitude, radius);\n        // }\n    }, [])\n\n    return(\n        <>\n            <div className=\"EventList container p-0 border border-light\">\n                <div className=\"row align-items-center\">\n                    <div className=\"col-2\">\n                        <img src={artist.image} alt='artist' className='img-fluid'/>\n                    </div>\n                    <div className='EventList-title col-10'>\n                        <div className='row'>\n                            <p className=\"fs-2\">{artist.name}</p>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        {(events.length)\n                        ?\n                        <table className='table'>\n                            <thead>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>Venue</th>\n                                    <th>City</th>\n                                    <th>State</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {events.map(e => {\n                                        return (<tr key={e.id}>\n                                            <td>{new Date(e.datetime).toLocaleDateString()}</td>\n                                            <td>{e.venue}</td>\n                                            <td>{e.venueCity}</td>\n                                            <td>{e.venueState}</td>\n                                            {currUser &&\n                                            <td><Button size=\"sm\">Save</Button></td>\n                                            }\n                                          </tr>)\n                                    })\n                                }     \n                            </tbody>\n                        </table>\n                        :\n                        <div className='p-5'>NO EVENTS AT THIS TIME</div>\n                    }\n                    </div>    \n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}